{"version":3,"sources":["Work.tsx","Storage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Work","_start","_end","_comment","obj","start","this","end","comment","worksKey","currentKey","Storage","works","localStorage","JSON","parse","getItem","forEach","work","push","setItem","stringify","current","removeItem","App","useState","setWork","setWorks","status","setStatus","errorMsg","setErrorMsg","editWork","setEditWork","editIndex","setEditIndex","showEdit","setShowEdit","handleCloseEdit","useEffect","ws","getWorks","cu","getCurrent","clone","Date","getTime","length","newWorks","saveWorks","clearCurrent","endStart","newWork","changeEditComment","e","target","value","formatTime","timestamp","moment","format","className","Container","Row","Alert","variant","Button","onClick","Form","Control","onChange","saveCurrent","list","w","index","Math","round","editRow","splice","removeRow","Table","striped","bordered","renderList","window","confirm","clear","Modal","show","onHide","Header","closeButton","Title","Body","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAAqBA,E,iDACXC,QAAkB,E,KAClBC,MAAgB,E,KAChBC,SAAmB,G,yCAE3B,WACE,IAAMC,EAAM,IAAIJ,EAIhB,OAHAI,EAAIC,MAAQC,KAAKL,OACjBG,EAAIG,IAAMD,KAAKJ,KACfE,EAAII,QAAUF,KAAKH,SACZC,I,iBAGT,WACE,OAAOE,KAAKL,Q,IAGd,SAAWA,GACTK,KAAKL,OAASA,I,eAGhB,WACE,OAAOK,KAAKJ,M,IAGd,SAAQA,GACNI,KAAKJ,KAAOA,I,mBAGd,WACE,OAAOI,KAAKH,U,IAGd,SAAaA,GACXG,KAAKH,SAAWA,M,sBCjCdM,EAAW,iBACXC,EAAa,mBACEC,E,6FAEnB,WACE,IAAMC,EAAgB,GAUtB,OATGH,KAAYI,cACbC,KAAKC,MAAMF,aAAaG,QAAQP,IAAqBQ,SAAQ,SAACb,GAC5D,IAAMc,EAAO,IAAIlB,EACjBkB,EAAKb,MAAQD,EAAIH,OACjBiB,EAAKX,IAAMH,EAAIF,KACfgB,EAAKV,QAAUJ,EAAID,SACnBS,EAAMO,KAAKD,MAGRN,I,uBAGT,SAAiBA,GACfC,aAAaO,QAAQX,EAAUK,KAAKO,UAAUT,M,wBAGhD,WACE,IAAMU,EAAU,IAAItB,EACpB,GAAGU,KAAcG,aAAc,CAC7B,IAAMT,EAAMU,KAAKC,MAAMF,aAAaG,QAAQN,IAC5CY,EAAQjB,MAAQD,EAAIH,OACpBqB,EAAQd,QAAUJ,EAAID,SAExB,OAAOmB,I,yBAGT,SAAmBA,GACjBT,aAAaO,QAAQV,EAAaI,KAAKO,UAAUC,M,0BAGnD,WACET,aAAaU,WAAWb,K,mBAG1B,WACEG,aAAaU,WAAWd,GACxBI,aAAaU,WAAWb,O,YC4Kbc,MAhNf,WAEE,MAAyBC,mBAAS,IAAIzB,GAAtC,mBAAOkB,EAAP,KAAaQ,EAAb,KACA,EAA0BD,mBAAiB,IAA3C,mBAAOb,EAAP,KAAce,EAAd,KACA,EAA4BF,mBAAS,aAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,mBAAS,IAAIzB,GAA7C,mBAAOgC,EAAP,KAAiBC,EAAjB,KACA,EAAkCR,mBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAAgCV,oBAAS,GAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACMC,EAAkB,kBAAMD,GAAY,IAE1CE,qBAAU,WACR,IAAMC,EAAK7B,EAAQ8B,WACnBd,EAASa,GACT,IAAME,EAAK/B,EAAQgC,aACnBjB,EAAQgB,KACR,IAEF,IAAMrC,EAAQ,WACZ,IAAMiB,EAAUJ,EAAK0B,QACrBtB,EAAQjB,OAAQ,IAAIwC,MAAOC,UAC3BpB,EAAQJ,GACRO,EAAU,YAGNtB,EAAM,WACV,GAA2B,IAAxBW,EAAKV,QAAQuC,OAAhB,CAIEhB,EAAY,IAEd,IAAMT,EAAUJ,EAAK0B,QACrBtB,EAAQf,KAAM,IAAIsC,MAAOC,UACzB,IAAME,EAAQ,sBAAOpC,GAAP,CAAcU,IAC5BK,EAASqB,GACTrC,EAAQsC,UAAUD,GAClBtB,EAAQ,IAAI1B,GACZW,EAAQuC,eACRrB,EAAU,kBAZRE,EAAY,wBAeVoB,EAAW,WACf,GAA2B,IAAxBjC,EAAKV,QAAQuC,OAAhB,CAIEhB,EAAY,IAEd,IAAMT,EAAUJ,EAAK0B,QACrBtB,EAAQf,KAAM,IAAIsC,MAAOC,UACzB,IAAME,EAAQ,sBAAOpC,GAAP,CAAcU,IAC5BK,EAASqB,GACTrC,EAAQsC,UAAUD,GAClBrC,EAAQuC,eACR,IAAME,EAAU,IAAIpD,EACpBoD,EAAQ/C,OAAQ,IAAIwC,MAAOC,UAC3BpB,EAAQ0B,GACRvB,EAAU,gBAdRE,EAAY,wBAsDVsB,EAAoB,SAACC,GACzB,IAAMhC,EAAUU,EAASY,QACzBtB,EAAQd,QAAU8C,EAAEC,OAAOC,MAC3BvB,EAAYX,GACZ,IAAM0B,EAAQ,YAAOpC,GACrBoC,EAASd,GAAaF,EACtBL,EAASqB,GACTrC,EAAQsC,UAAUD,IAGdS,EAAa,SAACC,GAClB,OAAIA,EAAY,EACPC,IAAOD,GAAWE,OAAO,SAE3B,IA+DT,OACE,qBAAKC,UAAU,MAAf,SACE,8BACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACGjC,EAASiB,OAAS,GACnB,cAACiB,EAAA,EAAD,CAAOC,QAAS,SAAhB,SACGnC,MAIL,cAACiC,EAAA,EAAD,UAlDQ,cAAXnC,EAEC,cAACsC,EAAA,EAAD,CAAQC,QAAS9D,EAAjB,mBAIA,gCACE,cAAC6D,EAAA,EAAD,CAAQC,QAAS5D,EAAjB,iBACA,cAAC2D,EAAA,EAAD,CAAQC,QAAShB,EAAjB,4BA6CA,cAACY,EAAA,EAAD,UACI,cAACK,EAAA,EAAKC,QAAN,CAAcC,SAnGJ,SAAChB,GACrB,IAAMhC,EAAUJ,EAAK0B,QACrBtB,EAAQd,QAAU8C,EAAEC,OAAOC,MAC3B9B,EAAQJ,GACRX,EAAQ4D,YAAYjD,IA+F6BkC,MAAOtC,EAAKV,YAEvD,eAACuD,EAAA,EAAD,WACC7C,EAAKV,QADN,IACgBiD,EAAWvC,EAAKb,OADhC,MAC2CoD,EAAWvC,EAAKX,QAE3D,cAACwD,EAAA,EAAD,UA5CW,WACjB,IAAMS,EAAqB,GAc3B,OAbA5D,EAAMK,SAAQ,SAACwD,EAAEC,GACfF,EAAKrD,KACH,+BACE,6BAAKsD,EAAEjE,UACP,6BAAMmE,KAAKC,OAAOH,EAAElE,IAAMkE,EAAEpE,OAAX,KAAiC,KAAK,MACvD,+BAAKoD,EAAWgB,EAAEpE,OAAlB,MAA6BoD,EAAWgB,EAAElE,QAC1C,+BACE,cAAC2D,EAAA,EAAD,CAAQC,QAAS,YA5EX,SAACO,GACfzC,EAAYrB,EAAM8D,IAClBvC,EAAauC,GACbrC,GAAY,GAyEkBwC,CAAQH,IAA9B,kBACA,cAACR,EAAA,EAAD,CAAQC,QAAS,YArFT,SAACO,GACjB9D,EAAMkE,OAAOJ,EAAO,GACpB,IAAM1B,EAAQ,YAAOpC,GACrBe,EAASqB,GACTrC,EAAQsC,UAAUD,GAiFY+B,CAAUL,IAAhC,yBANKA,OAYX,cAACM,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAAvB,SACE,gCACGV,MA2BEW,KAEH,cAACpB,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAAQC,QAzIJ,WACRiB,OAAOC,QAAQ,eAGnB1E,EAAQ2E,QACR3D,EAAS,IACTD,EAAQ,IAAI1B,KAmIJ,qBAlFN,eAACuF,EAAA,EAAD,CAAOC,KAAMpD,EAAUqD,OAAQnD,EAA/B,UACE,cAACiD,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,6BAEF,cAACL,EAAA,EAAMM,KAAP,UACE,cAACzB,EAAA,EAAKC,QAAN,CAAcC,SAAUjB,EAAmBG,MAAOxB,EAASxB,YAE7D,cAAC+E,EAAA,EAAMO,OAAP,UACE,cAAC5B,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS7B,EAArC,gCCtHKyD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0740718a.chunk.js","sourcesContent":["export default class Work {\n  private _start: number = -1;\n  private _end: number = -1; \n  private _comment: string = '';\n  \n  clone () {\n    const obj = new Work();\n    obj.start = this._start;\n    obj.end = this._end;\n    obj.comment = this._comment;\n    return obj;\n  }\n\n  get start (){\n    return this._start;\n  }\n\n  set start (_start) {\n    this._start = _start;\n  }\n\n  get end () {\n    return this._end;\n  }\n\n  set end(_end) {\n    this._end = _end;\n  }\n\n  get comment () {\n    return this._comment;\n  }\n\n  set comment (_comment) {\n    this._comment = _comment;\n  }\n}","import Work from './Work';\nconst worksKey = 'mylogDataWorks';\nconst currentKey = 'mylogDataCurrent';\nexport default class Storage {\n\n  static getWorks(): Work[] {\n    const works: Work[] = [];\n    if(worksKey in localStorage) {\n      JSON.parse(localStorage.getItem(worksKey) as string).forEach((obj: { _start: number; _end: number; _comment: string; })=>{\n        const work = new Work();\n        work.start = obj._start;\n        work.end = obj._end;\n        work.comment = obj._comment;\n        works.push(work);\n      });\n    }\n    return works;\n  }\n\n  static saveWorks(works:Work[]){\n    localStorage.setItem(worksKey, JSON.stringify(works));\n  }\n\n  static getCurrent(): Work {\n    const current = new Work();\n    if(currentKey in localStorage) {\n      const obj = JSON.parse(localStorage.getItem(currentKey) as string);\n      current.start = obj._start;\n      current.comment = obj._comment;\n    }\n    return current;\n  }\n\n  static saveCurrent(current:Work){\n    localStorage.setItem(currentKey,  JSON.stringify(current));\n  }\n\n  static clearCurrent() {\n    localStorage.removeItem(currentKey);\n  }\n  \n  static clear(){\n    localStorage.removeItem(worksKey);\n    localStorage.removeItem(currentKey);\n  }\n}\n\n\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Alert, Button, Container, Form, Modal, Row, Table } from 'react-bootstrap';\nimport Work  from './Work';\nimport moment from 'moment';\nimport Storage from './Storage';\n\nfunction App() {\n\n  const [work, setWork]  = useState(new Work());\n  const [works, setWorks] = useState<Work[]>([]);\n  const [status, setStatus] = useState('not_start');\n  const [errorMsg, setErrorMsg] = useState('');\n  const [editWork, setEditWork] = useState(new Work());\n  const [editIndex, setEditIndex] = useState(0);\n  const [showEdit, setShowEdit] = useState(false);\n  const handleCloseEdit = () => setShowEdit(false);\n\n  useEffect(()=>{\n    const ws = Storage.getWorks();\n    setWorks(ws);\n    const cu = Storage.getCurrent();\n    setWork(cu);\n  },[])\n\n  const start = ()=> {\n    const current = work.clone();\n    current.start = new Date().getTime();\n    setWork(current);\n    setStatus('started');\n  }\n\n  const end = ()=> {\n    if(work.comment.length === 0){\n      setErrorMsg('comment is required');\n      return;\n    }else {\n      setErrorMsg('');\n    }\n    const current = work.clone();\n    current.end = new Date().getTime();\n    const newWorks = [...works, current];\n    setWorks(newWorks);\n    Storage.saveWorks(newWorks);\n    setWork(new Work());\n    Storage.clearCurrent();\n    setStatus('not_start');\n  }\n\n  const endStart = ()=> {\n    if(work.comment.length === 0){\n      setErrorMsg('comment is required');\n      return;\n    } else {\n      setErrorMsg('');\n    } \n    const current = work.clone();\n    current.end = new Date().getTime();\n    const newWorks = [...works, current];\n    setWorks(newWorks);\n    Storage.saveWorks(newWorks);\n    Storage.clearCurrent();\n    const newWork = new Work();\n    newWork.start = new Date().getTime();\n    setWork(newWork);\n    setStatus('started');\n    \n  }\n\n  const clear = () => {\n    if(!window.confirm('All clear')){\n      return;\n    }\n    Storage.clear();\n    setWorks([]);\n    setWork(new Work());\n  }\n\n  const handleUpdate = ()  => {\n\n    setShowEdit(false);\n  }\n\n  const removeRow = (index:number) => {\n    works.splice(index, 1);\n    const newWorks = [...works];\n    setWorks(newWorks);\n    Storage.saveWorks(newWorks);\n    \n  }\n\n  const editRow = (index:number) => {\n    setEditWork(works[index]);\n    setEditIndex(index);\n    setShowEdit(true);\n  }\n  \n\n  const changeComment = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const current = work.clone();\n    current.comment = e.target.value;\n    setWork(current);\n    Storage.saveCurrent(current);\n  }\n\n  const changeEditComment = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const current = editWork.clone();\n    current.comment = e.target.value;\n    setEditWork(current);\n    const newWorks = [...works];\n    newWorks[editIndex] = editWork;\n    setWorks(newWorks);\n    Storage.saveWorks(newWorks);\n  }\n\n  const formatTime = (timestamp:number) =>{\n    if( timestamp > 0) {\n      return moment(timestamp).format('HH:mm')\n    }\n    return '';\n  }\n\n  const renderModal = () => {\n    return (\n      <Modal show={showEdit} onHide={handleCloseEdit}>\n        <Modal.Header closeButton>\n          <Modal.Title>編集</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control onChange={changeEditComment} value={editWork.comment}></Form.Control>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseEdit}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n    )\n  }\n\n  const renderButton = () => {\n    if(status === 'not_start'){\n      return (\n        <Button onClick={start}>Start</Button> \n      )\n    } else {\n      return (\n        <div>\n          <Button onClick={end}>End</Button>\n          <Button onClick={endStart}>End&Start</Button>\n        </div>\n      )\n    }\n  }\n\n\n  const renderList = ()=>{\n    const list:JSX.Element[] = [];\n    works.forEach((w,index)=>{\n      list.push(\n        <tr key={index}>\n          <td>{w.comment}</td>\n          <td>{ Math.round((w.end - w.start)/(60.0*60*1000)*100)/100}</td>\n          <td>{formatTime(w.start)} - {formatTime(w.end)}</td> \n          <td>\n            <Button onClick={()=>{editRow(index)}}>Edit</Button>\n            <Button onClick={()=>{removeRow(index)}}>Remove</Button>\n          </td>\n        </tr>\n      )\n    })\n    return(\n      <Table striped bordered>\n        <tbody>\n          {list}\n        </tbody>\n      </Table>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Container>\n          <Row>\n            {errorMsg.length > 0 &&\n            <Alert variant={'danger'}>\n              {errorMsg}\n            </Alert>\n            }\n          </Row>\n          <Row>\n            {renderButton()}\n          </Row>\n          <Row>\n              <Form.Control onChange={changeComment} value={work.comment}></Form.Control>\n          </Row>\n          <Row>\n          {work.comment} {formatTime(work.start)} - {formatTime(work.end)}\n          </Row>\n          <Row>\n            {renderList()}\n          </Row>\n          <Row>\n            <Button onClick={clear}>Clear</Button>\n          </Row>\n          {renderModal()}\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}