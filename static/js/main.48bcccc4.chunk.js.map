{"version":3,"sources":["Work.tsx","Storage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Work","_start","_end","_comment","obj","start","this","end","comment","worksKey","Storage","works","localStorage","JSON","parse","getItem","forEach","work","push","setItem","stringify","removeItem","App","useState","setWork","setWorks","status","setStatus","errorMsg","setErrorMsg","useEffect","ws","getWorks","current","clone","Date","getTime","length","newWorks","saveWorks","endStart","newWork","formatTime","timestamp","moment","format","className","Container","Row","Alert","variant","Button","onClick","Form","Control","onChange","e","target","value","list","w","index","Math","round","splice","removeRow","Table","striped","bordered","renderList","window","confirm","clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48bcccc4.chunk.js","sourcesContent":["export default class Work {\n  private _start: number = -1;\n  private _end: number = -1; \n  private _comment: string = '';\n  \n  clone () {\n    const obj = new Work();\n    obj.start = this._start;\n    obj.end = this._end;\n    obj.comment = this._comment;\n    return obj;\n  }\n\n  get start (){\n    return this._start;\n  }\n\n  set start (_start) {\n    this._start = _start;\n  }\n\n  get end () {\n    return this._end;\n  }\n\n  set end(_end) {\n    this._end = _end;\n  }\n\n  get comment () {\n    return this._comment;\n  }\n\n  set comment (_comment) {\n    this._comment = _comment;\n  }\n}","import Work from './Work';\nconst worksKey = 'mylogDataWorks';\n\nexport default class Storage {\n\n  static getWorks(): Work[] {\n    const works: Work[] = [];\n    if(worksKey in localStorage) {\n      JSON.parse(localStorage.getItem(worksKey) as string).forEach((obj: { _start: number; _end: number; _comment: string; })=>{\n        const work = new Work();\n        work.start = obj._start;\n        work.end = obj._end;\n        work.comment = obj._comment;\n        works.push(work);\n      });\n    }\n    return works;\n  }\n\n  static saveWorks(works:Work[]){\n    localStorage.setItem(worksKey, JSON.stringify(works));\n  }\n\n  static clear(){\n    localStorage.removeItem(worksKey);\n  }\n}\n\n\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Alert, Button, Container, Form, Row, Table } from 'react-bootstrap';\nimport Work  from './Work';\nimport moment from 'moment';\nimport Storage from './Storage';\n\nfunction App() {\n\n  const [work, setWork]  = useState(new Work());\n  const [works, setWorks] = useState<Work[]>([]);\n  const [status, setStatus] = useState('not_start');\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(()=>{\n    const ws = Storage.getWorks();\n    setWorks(ws);\n  },[])\n\n  const start = ()=> {\n    const current = work.clone();\n    current.start = new Date().getTime();\n    setWork(current);\n    setStatus('started');\n  }\n\n  const end = ()=> {\n    if(work.comment.length === 0){\n      setErrorMsg('comment is required');\n      return;\n    }else {\n      setErrorMsg('');\n    }\n    const current = work.clone();\n    current.end = new Date().getTime();\n    const newWorks = [...works, current];\n    setWorks(newWorks);\n    Storage.saveWorks(newWorks);\n    setWork(new Work());\n    setStatus('not_start');\n  }\n\n  const endStart = ()=> {\n    if(work.comment.length === 0){\n      setErrorMsg('comment is required');\n      return;\n    } else {\n      setErrorMsg('');\n    } \n    const current = work.clone();\n    current.end = new Date().getTime();\n    const newWorks = [...works, current];\n    setWorks(newWorks);\n    Storage.saveWorks(newWorks);\n    const newWork = new Work();\n    newWork.start = new Date().getTime();\n    setWork(newWork);\n    setStatus('started');\n    \n  }\n\n  const clear = () => {\n    if(!window.confirm('All clear')){\n      return;\n    }\n    Storage.clear();\n    setWorks([]);\n  }\n\n  const removeRow = (index:number) => {\n    works.splice(index, 1);\n    const newWorks = [...works];\n    setWorks(newWorks);\n    Storage.saveWorks(newWorks);\n    \n  }\n  \n\n  const changeComment = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const current = work.clone();\n    current.comment = e.target.value;\n    setWork(current);    \n  }\n\n  const formatTime = (timestamp:number) =>{\n    if( timestamp > 0) {\n      return moment(timestamp).format('HH:mm')\n    }\n    return '';\n  }\n\n\n  const renderButton = () => {\n    if(status === 'not_start'){\n      return (\n        <Button onClick={start}>Start</Button> \n      )\n    } else {\n      return (\n        <div>\n          <Button onClick={end}>End</Button>\n          <Button onClick={endStart}>End&Start</Button>\n        </div>\n      )\n    }\n  }\n\n\n  const renderList = ()=>{\n    const list:JSX.Element[] = [];\n    works.forEach((w,index)=>{\n      list.push(\n        <tr key={index}>\n          <td>{w.comment}</td>\n          <td>{ Math.round((w.end - w.start)/(60.0*60*1000)*10)/10}</td>\n          <td>{formatTime(w.start)} - {formatTime(w.end)}</td> \n          <td><Button onClick={()=>{removeRow(index)}}>Remove</Button></td>\n        </tr>\n      )\n    })\n    return(\n      <Table striped bordered>\n        <tbody>\n          {list}\n        </tbody>\n      </Table>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Container>\n          <Row>\n            {errorMsg.length > 0 &&\n            <Alert variant={'danger'}>\n              {errorMsg}\n            </Alert>\n            }\n          </Row>\n          <Row>\n            {renderButton()}\n          </Row>\n          <Row>\n              <Form.Control onChange={changeComment} value={work.comment}></Form.Control>\n          </Row>\n          <Row>\n          {work.comment} {formatTime(work.start)} - {formatTime(work.end)}\n          </Row>\n          <Row>\n            {renderList()}\n          </Row>\n          <Row>\n            <Button onClick={clear}>Clear</Button>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}